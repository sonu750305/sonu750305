#include<stdio.h>
#include<conio.h>

void main() {
    int ms, bs, nob, ef, n, mp[10], tif = 0, i, p = 0;
    clrscr();

    printf("Enter total memory available (in bytes): ");
    scanf("%d", &ms);
    printf("Enter block size (in bytes): ");
    scanf("%d", &bs);

    nob = ms / bs;
    ef = ms - nob * bs;

    printf("Enter number of processes: ");
    scanf("%d", &n);

    for(i = 0; i < n; i++) {
        printf("Enter memory required for process %d (in bytes): ", i+1);
        scanf("%d", &mp[i]);
    }

    printf("\nNo. of blocks available in memory: %d", nob);
    printf("\nPROCESS\tMEMORY\tALLOCATED\tINTERNAL FRAGMENTATION");

    for(i = 0; i < n && p < nob; i++) {
        printf("\n%d\t\t%d", i+1, mp[i]);
        if(mp[i] > bs) {
            printf("\tNO\t\t---");
        } else {
            printf("\tYES\t\t%d", bs - mp[i]);
            tif += bs - mp[i];
            p++;
        }
    }

    if(i < n)
        printf("\nMemory is full. Remaining processes cannot be accommodated.");

    printf("\nTotal Internal Fragmentation: %d", tif);
    printf("\nTotal External Fragmentation: %d", ef);

    getch();
}
